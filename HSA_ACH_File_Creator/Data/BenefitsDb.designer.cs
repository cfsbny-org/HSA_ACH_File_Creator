#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cfs.Custom.Software.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Benefits")]
	public partial class BenefitsDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLookup_Status(Lookup_Status instance);
    partial void UpdateLookup_Status(Lookup_Status instance);
    partial void DeleteLookup_Status(Lookup_Status instance);
    partial void InsertACHFile(ACHFile instance);
    partial void UpdateACHFile(ACHFile instance);
    partial void DeleteACHFile(ACHFile instance);
    partial void InsertFalkCheckStub(FalkCheckStub instance);
    partial void UpdateFalkCheckStub(FalkCheckStub instance);
    partial void DeleteFalkCheckStub(FalkCheckStub instance);
    partial void InsertFalkCheckHeader(FalkCheckHeader instance);
    partial void UpdateFalkCheckHeader(FalkCheckHeader instance);
    partial void DeleteFalkCheckHeader(FalkCheckHeader instance);
    partial void InsertFalkCheckStubDetail(FalkCheckStubDetail instance);
    partial void UpdateFalkCheckStubDetail(FalkCheckStubDetail instance);
    partial void DeleteFalkCheckStubDetail(FalkCheckStubDetail instance);
    partial void InsertFalkCheckStubsYtd(FalkCheckStubsYtd instance);
    partial void UpdateFalkCheckStubsYtd(FalkCheckStubsYtd instance);
    partial void DeleteFalkCheckStubsYtd(FalkCheckStubsYtd instance);
    partial void InsertACHDetail(ACHDetail instance);
    partial void UpdateACHDetail(ACHDetail instance);
    partial void DeleteACHDetail(ACHDetail instance);
    partial void InsertAccountType(AccountType instance);
    partial void UpdateAccountType(AccountType instance);
    partial void DeleteAccountType(AccountType instance);
    partial void InsertBankAccountType(BankAccountType instance);
    partial void UpdateBankAccountType(BankAccountType instance);
    partial void DeleteBankAccountType(BankAccountType instance);
    #endregion
		
		public BenefitsDbDataContext() : 
				base(global::Cfs.Custom.Software.Properties.Settings.Default.BenefitsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BenefitsDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BenefitsDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BenefitsDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BenefitsDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Lookup_Status> Lookup_Status
		{
			get
			{
				return this.GetTable<Lookup_Status>();
			}
		}
		
		public System.Data.Linq.Table<ACHFile> ACHFiles
		{
			get
			{
				return this.GetTable<ACHFile>();
			}
		}
		
		public System.Data.Linq.Table<FalkCheckStub> FalkCheckStubs
		{
			get
			{
				return this.GetTable<FalkCheckStub>();
			}
		}
		
		public System.Data.Linq.Table<FalkCheckHeader> FalkCheckHeaders
		{
			get
			{
				return this.GetTable<FalkCheckHeader>();
			}
		}
		
		public System.Data.Linq.Table<FalkCheckStubDetail> FalkCheckStubDetails
		{
			get
			{
				return this.GetTable<FalkCheckStubDetail>();
			}
		}
		
		public System.Data.Linq.Table<FalkCheckStubsYtd> FalkCheckStubsYtds
		{
			get
			{
				return this.GetTable<FalkCheckStubsYtd>();
			}
		}
		
		public System.Data.Linq.Table<ACHDetail> ACHDetails
		{
			get
			{
				return this.GetTable<ACHDetail>();
			}
		}
		
		public System.Data.Linq.Table<AccountType> AccountTypes
		{
			get
			{
				return this.GetTable<AccountType>();
			}
		}
		
		public System.Data.Linq.Table<BankAccountType> BankAccountTypes
		{
			get
			{
				return this.GetTable<BankAccountType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStatus")]
	public partial class Lookup_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _statusId;
		
		private string _statusDesc;
		
		private EntitySet<ACHFile> _ACHFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstatusIdChanging(char value);
    partial void OnstatusIdChanged();
    partial void OnstatusDescChanging(string value);
    partial void OnstatusDescChanged();
    #endregion
		
		public Lookup_Status()
		{
			this._ACHFiles = new EntitySet<ACHFile>(new Action<ACHFile>(this.attach_ACHFiles), new Action<ACHFile>(this.detach_ACHFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusId", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char statusId
		{
			get
			{
				return this._statusId;
			}
			set
			{
				if ((this._statusId != value))
				{
					this.OnstatusIdChanging(value);
					this.SendPropertyChanging();
					this._statusId = value;
					this.SendPropertyChanged("statusId");
					this.OnstatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusDesc", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string statusDesc
		{
			get
			{
				return this._statusDesc;
			}
			set
			{
				if ((this._statusDesc != value))
				{
					this.OnstatusDescChanging(value);
					this.SendPropertyChanging();
					this._statusDesc = value;
					this.SendPropertyChanged("statusDesc");
					this.OnstatusDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_Status_ACHFile", Storage="_ACHFiles", ThisKey="statusId", OtherKey="achFileStatus")]
		public EntitySet<ACHFile> ACHFiles
		{
			get
			{
				return this._ACHFiles;
			}
			set
			{
				this._ACHFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACHFiles(ACHFile entity)
		{
			this.SendPropertyChanging();
			entity.Lookup_Status = this;
		}
		
		private void detach_ACHFiles(ACHFile entity)
		{
			this.SendPropertyChanging();
			entity.Lookup_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblACHFiles")]
	public partial class ACHFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _achBatchId;
		
		private System.DateTime _achBatchCreated;
		
		private string _achBatchCreatedBy;
		
		private System.DateTime _achCheckDate;
		
		private string _achCompany;
		
		private double _achTotalAmount;
		
		private char _achFileStatus;
		
		private EntitySet<ACHDetail> _tblACHDetails;
		
		private EntityRef<Lookup_Status> _Lookup_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnachBatchIdChanging(long value);
    partial void OnachBatchIdChanged();
    partial void OnachBatchCreatedChanging(System.DateTime value);
    partial void OnachBatchCreatedChanged();
    partial void OnachBatchCreatedByChanging(string value);
    partial void OnachBatchCreatedByChanged();
    partial void OnachCheckDateChanging(System.DateTime value);
    partial void OnachCheckDateChanged();
    partial void OnachCompanyChanging(string value);
    partial void OnachCompanyChanged();
    partial void OnachTotalAmountChanging(double value);
    partial void OnachTotalAmountChanged();
    partial void OnachFileStatusChanging(char value);
    partial void OnachFileStatusChanged();
    #endregion
		
		public ACHFile()
		{
			this._tblACHDetails = new EntitySet<ACHDetail>(new Action<ACHDetail>(this.attach_tblACHDetails), new Action<ACHDetail>(this.detach_tblACHDetails));
			this._Lookup_Status = default(EntityRef<Lookup_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achBatchId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long achBatchId
		{
			get
			{
				return this._achBatchId;
			}
			set
			{
				if ((this._achBatchId != value))
				{
					this.OnachBatchIdChanging(value);
					this.SendPropertyChanging();
					this._achBatchId = value;
					this.SendPropertyChanged("achBatchId");
					this.OnachBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achBatchCreated", DbType="SmallDateTime NOT NULL")]
		public System.DateTime achBatchCreated
		{
			get
			{
				return this._achBatchCreated;
			}
			set
			{
				if ((this._achBatchCreated != value))
				{
					this.OnachBatchCreatedChanging(value);
					this.SendPropertyChanging();
					this._achBatchCreated = value;
					this.SendPropertyChanged("achBatchCreated");
					this.OnachBatchCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achBatchCreatedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string achBatchCreatedBy
		{
			get
			{
				return this._achBatchCreatedBy;
			}
			set
			{
				if ((this._achBatchCreatedBy != value))
				{
					this.OnachBatchCreatedByChanging(value);
					this.SendPropertyChanging();
					this._achBatchCreatedBy = value;
					this.SendPropertyChanged("achBatchCreatedBy");
					this.OnachBatchCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achCheckDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime achCheckDate
		{
			get
			{
				return this._achCheckDate;
			}
			set
			{
				if ((this._achCheckDate != value))
				{
					this.OnachCheckDateChanging(value);
					this.SendPropertyChanging();
					this._achCheckDate = value;
					this.SendPropertyChanged("achCheckDate");
					this.OnachCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achCompany", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string achCompany
		{
			get
			{
				return this._achCompany;
			}
			set
			{
				if ((this._achCompany != value))
				{
					this.OnachCompanyChanging(value);
					this.SendPropertyChanging();
					this._achCompany = value;
					this.SendPropertyChanged("achCompany");
					this.OnachCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achTotalAmount", DbType="Float NOT NULL")]
		public double achTotalAmount
		{
			get
			{
				return this._achTotalAmount;
			}
			set
			{
				if ((this._achTotalAmount != value))
				{
					this.OnachTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._achTotalAmount = value;
					this.SendPropertyChanged("achTotalAmount");
					this.OnachTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achFileStatus", DbType="Char(1) NOT NULL")]
		public char achFileStatus
		{
			get
			{
				return this._achFileStatus;
			}
			set
			{
				if ((this._achFileStatus != value))
				{
					if (this._Lookup_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnachFileStatusChanging(value);
					this.SendPropertyChanging();
					this._achFileStatus = value;
					this.SendPropertyChanged("achFileStatus");
					this.OnachFileStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACHFile_ACHDetail", Storage="_tblACHDetails", ThisKey="achBatchId", OtherKey="achBatchId")]
		public EntitySet<ACHDetail> ACHDetails
		{
			get
			{
				return this._tblACHDetails;
			}
			set
			{
				this._tblACHDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lookup_Status_ACHFile", Storage="_Lookup_Status", ThisKey="achFileStatus", OtherKey="statusId", IsForeignKey=true)]
		public Lookup_Status Lookup_Status
		{
			get
			{
				return this._Lookup_Status.Entity;
			}
			set
			{
				Lookup_Status previousValue = this._Lookup_Status.Entity;
				if (((previousValue != value) 
							|| (this._Lookup_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lookup_Status.Entity = null;
						previousValue.ACHFiles.Remove(this);
					}
					this._Lookup_Status.Entity = value;
					if ((value != null))
					{
						value.ACHFiles.Add(this);
						this._achFileStatus = value.statusId;
					}
					else
					{
						this._achFileStatus = default(char);
					}
					this.SendPropertyChanged("Lookup_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblACHDetails(ACHDetail entity)
		{
			this.SendPropertyChanging();
			entity.ACHFile = this;
		}
		
		private void detach_tblACHDetails(ACHDetail entity)
		{
			this.SendPropertyChanging();
			entity.ACHFile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFalkCheckStubs")]
	public partial class FalkCheckStub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _stubBatchId;
		
		private System.DateTime _stubBatchCreated;
		
		private string _stubBatchCreatedBy;
		
		private System.DateTime _stubBatchCheckDate;
		
		private bool _isUploaded;
		
		private System.Nullable<System.DateTime> _uploadedStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstubBatchIdChanging(long value);
    partial void OnstubBatchIdChanged();
    partial void OnstubBatchCreatedChanging(System.DateTime value);
    partial void OnstubBatchCreatedChanged();
    partial void OnstubBatchCreatedByChanging(string value);
    partial void OnstubBatchCreatedByChanged();
    partial void OnstubBatchCheckDateChanging(System.DateTime value);
    partial void OnstubBatchCheckDateChanged();
    partial void OnisUploadedChanging(bool value);
    partial void OnisUploadedChanged();
    partial void OnuploadedStampChanging(System.Nullable<System.DateTime> value);
    partial void OnuploadedStampChanged();
    #endregion
		
		public FalkCheckStub()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stubBatchId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long stubBatchId
		{
			get
			{
				return this._stubBatchId;
			}
			set
			{
				if ((this._stubBatchId != value))
				{
					this.OnstubBatchIdChanging(value);
					this.SendPropertyChanging();
					this._stubBatchId = value;
					this.SendPropertyChanged("stubBatchId");
					this.OnstubBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stubBatchCreated", DbType="SmallDateTime NOT NULL")]
		public System.DateTime stubBatchCreated
		{
			get
			{
				return this._stubBatchCreated;
			}
			set
			{
				if ((this._stubBatchCreated != value))
				{
					this.OnstubBatchCreatedChanging(value);
					this.SendPropertyChanging();
					this._stubBatchCreated = value;
					this.SendPropertyChanged("stubBatchCreated");
					this.OnstubBatchCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stubBatchCreatedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string stubBatchCreatedBy
		{
			get
			{
				return this._stubBatchCreatedBy;
			}
			set
			{
				if ((this._stubBatchCreatedBy != value))
				{
					this.OnstubBatchCreatedByChanging(value);
					this.SendPropertyChanging();
					this._stubBatchCreatedBy = value;
					this.SendPropertyChanged("stubBatchCreatedBy");
					this.OnstubBatchCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stubBatchCheckDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime stubBatchCheckDate
		{
			get
			{
				return this._stubBatchCheckDate;
			}
			set
			{
				if ((this._stubBatchCheckDate != value))
				{
					this.OnstubBatchCheckDateChanging(value);
					this.SendPropertyChanging();
					this._stubBatchCheckDate = value;
					this.SendPropertyChanged("stubBatchCheckDate");
					this.OnstubBatchCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isUploaded", DbType="Bit NOT NULL")]
		public bool isUploaded
		{
			get
			{
				return this._isUploaded;
			}
			set
			{
				if ((this._isUploaded != value))
				{
					this.OnisUploadedChanging(value);
					this.SendPropertyChanging();
					this._isUploaded = value;
					this.SendPropertyChanged("isUploaded");
					this.OnisUploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uploadedStamp", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> uploadedStamp
		{
			get
			{
				return this._uploadedStamp;
			}
			set
			{
				if ((this._uploadedStamp != value))
				{
					this.OnuploadedStampChanging(value);
					this.SendPropertyChanging();
					this._uploadedStamp = value;
					this.SendPropertyChanged("uploadedStamp");
					this.OnuploadedStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFalkCheckHeaders")]
	public partial class FalkCheckHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _checkStubHeaderLineId;
		
		private int _abraId;
		
		private System.DateTime _checkDate;
		
		private string _checkNumber;
		
		private decimal _grossPay;
		
		private decimal _netPay;
		
		private System.DateTime _payPeriodStart;
		
		private System.DateTime _payPeriodEnd;
		
		private string _payToOrder;
		
		private string _payToAddress;
		
		private decimal _salaryRate;
		
		private long _stubBatchId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncheckStubHeaderLineIdChanging(long value);
    partial void OncheckStubHeaderLineIdChanged();
    partial void OnabraIdChanging(int value);
    partial void OnabraIdChanged();
    partial void OncheckDateChanging(System.DateTime value);
    partial void OncheckDateChanged();
    partial void OncheckNumberChanging(string value);
    partial void OncheckNumberChanged();
    partial void OngrossPayChanging(decimal value);
    partial void OngrossPayChanged();
    partial void OnnetPayChanging(decimal value);
    partial void OnnetPayChanged();
    partial void OnpayPeriodStartChanging(System.DateTime value);
    partial void OnpayPeriodStartChanged();
    partial void OnpayPeriodEndChanging(System.DateTime value);
    partial void OnpayPeriodEndChanged();
    partial void OnpayToOrderChanging(string value);
    partial void OnpayToOrderChanged();
    partial void OnpayToAddressChanging(string value);
    partial void OnpayToAddressChanged();
    partial void OnsalaryRateChanging(decimal value);
    partial void OnsalaryRateChanged();
    partial void OnstubBatchIdChanging(long value);
    partial void OnstubBatchIdChanged();
    #endregion
		
		public FalkCheckHeader()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkStubHeaderLineId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long checkStubHeaderLineId
		{
			get
			{
				return this._checkStubHeaderLineId;
			}
			set
			{
				if ((this._checkStubHeaderLineId != value))
				{
					this.OncheckStubHeaderLineIdChanging(value);
					this.SendPropertyChanging();
					this._checkStubHeaderLineId = value;
					this.SendPropertyChanged("checkStubHeaderLineId");
					this.OncheckStubHeaderLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abraId", DbType="Int NOT NULL")]
		public int abraId
		{
			get
			{
				return this._abraId;
			}
			set
			{
				if ((this._abraId != value))
				{
					this.OnabraIdChanging(value);
					this.SendPropertyChanging();
					this._abraId = value;
					this.SendPropertyChanged("abraId");
					this.OnabraIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime checkDate
		{
			get
			{
				return this._checkDate;
			}
			set
			{
				if ((this._checkDate != value))
				{
					this.OncheckDateChanging(value);
					this.SendPropertyChanging();
					this._checkDate = value;
					this.SendPropertyChanged("checkDate");
					this.OncheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string checkNumber
		{
			get
			{
				return this._checkNumber;
			}
			set
			{
				if ((this._checkNumber != value))
				{
					this.OncheckNumberChanging(value);
					this.SendPropertyChanging();
					this._checkNumber = value;
					this.SendPropertyChanged("checkNumber");
					this.OncheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grossPay", DbType="Money NOT NULL")]
		public decimal grossPay
		{
			get
			{
				return this._grossPay;
			}
			set
			{
				if ((this._grossPay != value))
				{
					this.OngrossPayChanging(value);
					this.SendPropertyChanging();
					this._grossPay = value;
					this.SendPropertyChanged("grossPay");
					this.OngrossPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netPay", DbType="Money NOT NULL")]
		public decimal netPay
		{
			get
			{
				return this._netPay;
			}
			set
			{
				if ((this._netPay != value))
				{
					this.OnnetPayChanging(value);
					this.SendPropertyChanging();
					this._netPay = value;
					this.SendPropertyChanged("netPay");
					this.OnnetPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payPeriodStart", DbType="SmallDateTime NOT NULL")]
		public System.DateTime payPeriodStart
		{
			get
			{
				return this._payPeriodStart;
			}
			set
			{
				if ((this._payPeriodStart != value))
				{
					this.OnpayPeriodStartChanging(value);
					this.SendPropertyChanging();
					this._payPeriodStart = value;
					this.SendPropertyChanged("payPeriodStart");
					this.OnpayPeriodStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payPeriodEnd", DbType="SmallDateTime NOT NULL")]
		public System.DateTime payPeriodEnd
		{
			get
			{
				return this._payPeriodEnd;
			}
			set
			{
				if ((this._payPeriodEnd != value))
				{
					this.OnpayPeriodEndChanging(value);
					this.SendPropertyChanging();
					this._payPeriodEnd = value;
					this.SendPropertyChanged("payPeriodEnd");
					this.OnpayPeriodEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payToOrder", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string payToOrder
		{
			get
			{
				return this._payToOrder;
			}
			set
			{
				if ((this._payToOrder != value))
				{
					this.OnpayToOrderChanging(value);
					this.SendPropertyChanging();
					this._payToOrder = value;
					this.SendPropertyChanged("payToOrder");
					this.OnpayToOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payToAddress", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string payToAddress
		{
			get
			{
				return this._payToAddress;
			}
			set
			{
				if ((this._payToAddress != value))
				{
					this.OnpayToAddressChanging(value);
					this.SendPropertyChanging();
					this._payToAddress = value;
					this.SendPropertyChanged("payToAddress");
					this.OnpayToAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaryRate", DbType="Money NOT NULL")]
		public decimal salaryRate
		{
			get
			{
				return this._salaryRate;
			}
			set
			{
				if ((this._salaryRate != value))
				{
					this.OnsalaryRateChanging(value);
					this.SendPropertyChanging();
					this._salaryRate = value;
					this.SendPropertyChanged("salaryRate");
					this.OnsalaryRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stubBatchId", DbType="BigInt NOT NULL")]
		public long stubBatchId
		{
			get
			{
				return this._stubBatchId;
			}
			set
			{
				if ((this._stubBatchId != value))
				{
					this.OnstubBatchIdChanging(value);
					this.SendPropertyChanging();
					this._stubBatchId = value;
					this.SendPropertyChanged("stubBatchId");
					this.OnstubBatchIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFalkCheckStubDetails")]
	public partial class FalkCheckStubDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _checkStubDetailId;
		
		private int _abraId;
		
		private System.DateTime _checkDate;
		
		private string _checkNumber;
		
		private int _checkSectionId;
		
		private string _itemCode;
		
		private string _itemDescription;
		
		private System.Nullable<double> _itemAmount;
		
		private System.Nullable<double> _itemRate;
		
		private System.Nullable<double> _itemQuantity;
		
		private long _checkStubId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncheckStubDetailIdChanging(long value);
    partial void OncheckStubDetailIdChanged();
    partial void OnabraIdChanging(int value);
    partial void OnabraIdChanged();
    partial void OncheckDateChanging(System.DateTime value);
    partial void OncheckDateChanged();
    partial void OncheckNumberChanging(string value);
    partial void OncheckNumberChanged();
    partial void OncheckSectionIdChanging(int value);
    partial void OncheckSectionIdChanged();
    partial void OnitemCodeChanging(string value);
    partial void OnitemCodeChanged();
    partial void OnitemDescriptionChanging(string value);
    partial void OnitemDescriptionChanged();
    partial void OnitemAmountChanging(System.Nullable<double> value);
    partial void OnitemAmountChanged();
    partial void OnitemRateChanging(System.Nullable<double> value);
    partial void OnitemRateChanged();
    partial void OnitemQuantityChanging(System.Nullable<double> value);
    partial void OnitemQuantityChanged();
    partial void OncheckStubIdChanging(long value);
    partial void OncheckStubIdChanged();
    #endregion
		
		public FalkCheckStubDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkStubDetailId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long checkStubDetailId
		{
			get
			{
				return this._checkStubDetailId;
			}
			set
			{
				if ((this._checkStubDetailId != value))
				{
					this.OncheckStubDetailIdChanging(value);
					this.SendPropertyChanging();
					this._checkStubDetailId = value;
					this.SendPropertyChanged("checkStubDetailId");
					this.OncheckStubDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abraId", DbType="Int NOT NULL")]
		public int abraId
		{
			get
			{
				return this._abraId;
			}
			set
			{
				if ((this._abraId != value))
				{
					this.OnabraIdChanging(value);
					this.SendPropertyChanging();
					this._abraId = value;
					this.SendPropertyChanged("abraId");
					this.OnabraIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime checkDate
		{
			get
			{
				return this._checkDate;
			}
			set
			{
				if ((this._checkDate != value))
				{
					this.OncheckDateChanging(value);
					this.SendPropertyChanging();
					this._checkDate = value;
					this.SendPropertyChanged("checkDate");
					this.OncheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkNumber", DbType="VarChar(50)")]
		public string checkNumber
		{
			get
			{
				return this._checkNumber;
			}
			set
			{
				if ((this._checkNumber != value))
				{
					this.OncheckNumberChanging(value);
					this.SendPropertyChanging();
					this._checkNumber = value;
					this.SendPropertyChanged("checkNumber");
					this.OncheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkSectionId", DbType="Int NOT NULL")]
		public int checkSectionId
		{
			get
			{
				return this._checkSectionId;
			}
			set
			{
				if ((this._checkSectionId != value))
				{
					this.OncheckSectionIdChanging(value);
					this.SendPropertyChanging();
					this._checkSectionId = value;
					this.SendPropertyChanged("checkSectionId");
					this.OncheckSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemCode", DbType="VarChar(20)")]
		public string itemCode
		{
			get
			{
				return this._itemCode;
			}
			set
			{
				if ((this._itemCode != value))
				{
					this.OnitemCodeChanging(value);
					this.SendPropertyChanging();
					this._itemCode = value;
					this.SendPropertyChanged("itemCode");
					this.OnitemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemDescription", DbType="VarChar(150)")]
		public string itemDescription
		{
			get
			{
				return this._itemDescription;
			}
			set
			{
				if ((this._itemDescription != value))
				{
					this.OnitemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._itemDescription = value;
					this.SendPropertyChanged("itemDescription");
					this.OnitemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemAmount", DbType="Float")]
		public System.Nullable<double> itemAmount
		{
			get
			{
				return this._itemAmount;
			}
			set
			{
				if ((this._itemAmount != value))
				{
					this.OnitemAmountChanging(value);
					this.SendPropertyChanging();
					this._itemAmount = value;
					this.SendPropertyChanged("itemAmount");
					this.OnitemAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemRate", DbType="Float")]
		public System.Nullable<double> itemRate
		{
			get
			{
				return this._itemRate;
			}
			set
			{
				if ((this._itemRate != value))
				{
					this.OnitemRateChanging(value);
					this.SendPropertyChanging();
					this._itemRate = value;
					this.SendPropertyChanged("itemRate");
					this.OnitemRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemQuantity", DbType="Float")]
		public System.Nullable<double> itemQuantity
		{
			get
			{
				return this._itemQuantity;
			}
			set
			{
				if ((this._itemQuantity != value))
				{
					this.OnitemQuantityChanging(value);
					this.SendPropertyChanging();
					this._itemQuantity = value;
					this.SendPropertyChanged("itemQuantity");
					this.OnitemQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkStubId", DbType="BigInt NOT NULL")]
		public long checkStubId
		{
			get
			{
				return this._checkStubId;
			}
			set
			{
				if ((this._checkStubId != value))
				{
					this.OncheckStubIdChanging(value);
					this.SendPropertyChanging();
					this._checkStubId = value;
					this.SendPropertyChanged("checkStubId");
					this.OncheckStubIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFalkCheckStubsYtd")]
	public partial class FalkCheckStubsYtd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _checkStubYtdLineId;
		
		private int _abraId;
		
		private System.DateTime _checkDate;
		
		private string _checkNumber;
		
		private int _checkSectionId;
		
		private string _codeType;
		
		private string _itemCode;
		
		private double _ytdAmount;
		
		private long _checkStubId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncheckStubYtdLineIdChanging(long value);
    partial void OncheckStubYtdLineIdChanged();
    partial void OnabraIdChanging(int value);
    partial void OnabraIdChanged();
    partial void OncheckDateChanging(System.DateTime value);
    partial void OncheckDateChanged();
    partial void OncheckNumberChanging(string value);
    partial void OncheckNumberChanged();
    partial void OncheckSectionIdChanging(int value);
    partial void OncheckSectionIdChanged();
    partial void OncodeTypeChanging(string value);
    partial void OncodeTypeChanged();
    partial void OnitemCodeChanging(string value);
    partial void OnitemCodeChanged();
    partial void OnytdAmountChanging(double value);
    partial void OnytdAmountChanged();
    partial void OncheckStubIdChanging(long value);
    partial void OncheckStubIdChanged();
    #endregion
		
		public FalkCheckStubsYtd()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkStubYtdLineId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long checkStubYtdLineId
		{
			get
			{
				return this._checkStubYtdLineId;
			}
			set
			{
				if ((this._checkStubYtdLineId != value))
				{
					this.OncheckStubYtdLineIdChanging(value);
					this.SendPropertyChanging();
					this._checkStubYtdLineId = value;
					this.SendPropertyChanged("checkStubYtdLineId");
					this.OncheckStubYtdLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abraId", DbType="Int NOT NULL")]
		public int abraId
		{
			get
			{
				return this._abraId;
			}
			set
			{
				if ((this._abraId != value))
				{
					this.OnabraIdChanging(value);
					this.SendPropertyChanging();
					this._abraId = value;
					this.SendPropertyChanged("abraId");
					this.OnabraIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime checkDate
		{
			get
			{
				return this._checkDate;
			}
			set
			{
				if ((this._checkDate != value))
				{
					this.OncheckDateChanging(value);
					this.SendPropertyChanging();
					this._checkDate = value;
					this.SendPropertyChanged("checkDate");
					this.OncheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string checkNumber
		{
			get
			{
				return this._checkNumber;
			}
			set
			{
				if ((this._checkNumber != value))
				{
					this.OncheckNumberChanging(value);
					this.SendPropertyChanging();
					this._checkNumber = value;
					this.SendPropertyChanged("checkNumber");
					this.OncheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkSectionId", DbType="Int NOT NULL")]
		public int checkSectionId
		{
			get
			{
				return this._checkSectionId;
			}
			set
			{
				if ((this._checkSectionId != value))
				{
					this.OncheckSectionIdChanging(value);
					this.SendPropertyChanging();
					this._checkSectionId = value;
					this.SendPropertyChanged("checkSectionId");
					this.OncheckSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string codeType
		{
			get
			{
				return this._codeType;
			}
			set
			{
				if ((this._codeType != value))
				{
					this.OncodeTypeChanging(value);
					this.SendPropertyChanging();
					this._codeType = value;
					this.SendPropertyChanged("codeType");
					this.OncodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string itemCode
		{
			get
			{
				return this._itemCode;
			}
			set
			{
				if ((this._itemCode != value))
				{
					this.OnitemCodeChanging(value);
					this.SendPropertyChanging();
					this._itemCode = value;
					this.SendPropertyChanged("itemCode");
					this.OnitemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ytdAmount", DbType="Float NOT NULL")]
		public double ytdAmount
		{
			get
			{
				return this._ytdAmount;
			}
			set
			{
				if ((this._ytdAmount != value))
				{
					this.OnytdAmountChanging(value);
					this.SendPropertyChanging();
					this._ytdAmount = value;
					this.SendPropertyChanged("ytdAmount");
					this.OnytdAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkStubId", DbType="BigInt NOT NULL")]
		public long checkStubId
		{
			get
			{
				return this._checkStubId;
			}
			set
			{
				if ((this._checkStubId != value))
				{
					this.OncheckStubIdChanging(value);
					this.SendPropertyChanging();
					this._checkStubId = value;
					this.SendPropertyChanged("checkStubId");
					this.OncheckStubIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblACHDetails")]
	public partial class ACHDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _achDetailId;
		
		private long _achBatchId;
		
		private string _employeeId;
		
		private string _lastName;
		
		private string _firstName;
		
		private string _middleInitial;
		
		private decimal _erAmount;
		
		private decimal _emAmount;
		
		private string _accountType;
		
		private string _routingNumber;
		
		private string _accountNumber;
		
		private bool _includeInFile;
		
		private EntityRef<ACHFile> _ACHFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnachDetailIdChanging(long value);
    partial void OnachDetailIdChanged();
    partial void OnachBatchIdChanging(long value);
    partial void OnachBatchIdChanged();
    partial void OnemployeeIdChanging(string value);
    partial void OnemployeeIdChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnmiddleInitialChanging(string value);
    partial void OnmiddleInitialChanged();
    partial void OnerAmountChanging(decimal value);
    partial void OnerAmountChanged();
    partial void OnemAmountChanging(decimal value);
    partial void OnemAmountChanged();
    partial void OnaccountTypeChanging(string value);
    partial void OnaccountTypeChanged();
    partial void OnroutingNumberChanging(string value);
    partial void OnroutingNumberChanged();
    partial void OnaccountNumberChanging(string value);
    partial void OnaccountNumberChanged();
    partial void OnincludeInFileChanging(bool value);
    partial void OnincludeInFileChanged();
    #endregion
		
		public ACHDetail()
		{
			this._ACHFile = default(EntityRef<ACHFile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achDetailId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long achDetailId
		{
			get
			{
				return this._achDetailId;
			}
			set
			{
				if ((this._achDetailId != value))
				{
					this.OnachDetailIdChanging(value);
					this.SendPropertyChanging();
					this._achDetailId = value;
					this.SendPropertyChanged("achDetailId");
					this.OnachDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achBatchId", DbType="BigInt NOT NULL")]
		public long achBatchId
		{
			get
			{
				return this._achBatchId;
			}
			set
			{
				if ((this._achBatchId != value))
				{
					if (this._ACHFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnachBatchIdChanging(value);
					this.SendPropertyChanging();
					this._achBatchId = value;
					this.SendPropertyChanged("achBatchId");
					this.OnachBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeId", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string employeeId
		{
			get
			{
				return this._employeeId;
			}
			set
			{
				if ((this._employeeId != value))
				{
					this.OnemployeeIdChanging(value);
					this.SendPropertyChanging();
					this._employeeId = value;
					this.SendPropertyChanged("employeeId");
					this.OnemployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middleInitial", DbType="VarChar(50)")]
		public string middleInitial
		{
			get
			{
				return this._middleInitial;
			}
			set
			{
				if ((this._middleInitial != value))
				{
					this.OnmiddleInitialChanging(value);
					this.SendPropertyChanging();
					this._middleInitial = value;
					this.SendPropertyChanged("middleInitial");
					this.OnmiddleInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_erAmount", DbType="Money NOT NULL")]
		public decimal erAmount
		{
			get
			{
				return this._erAmount;
			}
			set
			{
				if ((this._erAmount != value))
				{
					this.OnerAmountChanging(value);
					this.SendPropertyChanging();
					this._erAmount = value;
					this.SendPropertyChanged("erAmount");
					this.OnerAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emAmount", DbType="Money NOT NULL")]
		public decimal emAmount
		{
			get
			{
				return this._emAmount;
			}
			set
			{
				if ((this._emAmount != value))
				{
					this.OnemAmountChanging(value);
					this.SendPropertyChanging();
					this._emAmount = value;
					this.SendPropertyChanged("emAmount");
					this.OnemAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountType", DbType="Char(2)")]
		public string accountType
		{
			get
			{
				return this._accountType;
			}
			set
			{
				if ((this._accountType != value))
				{
					this.OnaccountTypeChanging(value);
					this.SendPropertyChanging();
					this._accountType = value;
					this.SendPropertyChanged("accountType");
					this.OnaccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_routingNumber", DbType="VarChar(50)")]
		public string routingNumber
		{
			get
			{
				return this._routingNumber;
			}
			set
			{
				if ((this._routingNumber != value))
				{
					this.OnroutingNumberChanging(value);
					this.SendPropertyChanging();
					this._routingNumber = value;
					this.SendPropertyChanged("routingNumber");
					this.OnroutingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountNumber", DbType="VarChar(50)")]
		public string accountNumber
		{
			get
			{
				return this._accountNumber;
			}
			set
			{
				if ((this._accountNumber != value))
				{
					this.OnaccountNumberChanging(value);
					this.SendPropertyChanging();
					this._accountNumber = value;
					this.SendPropertyChanged("accountNumber");
					this.OnaccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_includeInFile", DbType="Bit NOT NULL")]
		public bool includeInFile
		{
			get
			{
				return this._includeInFile;
			}
			set
			{
				if ((this._includeInFile != value))
				{
					this.OnincludeInFileChanging(value);
					this.SendPropertyChanging();
					this._includeInFile = value;
					this.SendPropertyChanged("includeInFile");
					this.OnincludeInFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACHFile_ACHDetail", Storage="_ACHFile", ThisKey="achBatchId", OtherKey="achBatchId", IsForeignKey=true)]
		public ACHFile ACHFile
		{
			get
			{
				return this._ACHFile.Entity;
			}
			set
			{
				ACHFile previousValue = this._ACHFile.Entity;
				if (((previousValue != value) 
							|| (this._ACHFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACHFile.Entity = null;
						previousValue.ACHDetails.Remove(this);
					}
					this._ACHFile.Entity = value;
					if ((value != null))
					{
						value.ACHDetails.Add(this);
						this._achBatchId = value.achBatchId;
					}
					else
					{
						this._achBatchId = default(long);
					}
					this.SendPropertyChanged("ACHFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblACHAccountTypes")]
	public partial class AccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _accountTypeId;
		
		private string _accountTypeDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaccountTypeIdChanging(int value);
    partial void OnaccountTypeIdChanged();
    partial void OnaccountTypeDetailChanging(string value);
    partial void OnaccountTypeDetailChanged();
    #endregion
		
		public AccountType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int accountTypeId
		{
			get
			{
				return this._accountTypeId;
			}
			set
			{
				if ((this._accountTypeId != value))
				{
					this.OnaccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._accountTypeId = value;
					this.SendPropertyChanged("accountTypeId");
					this.OnaccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountTypeDetail", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string accountTypeDetail
		{
			get
			{
				return this._accountTypeDetail;
			}
			set
			{
				if ((this._accountTypeDetail != value))
				{
					this.OnaccountTypeDetailChanging(value);
					this.SendPropertyChanging();
					this._accountTypeDetail = value;
					this.SendPropertyChanged("accountTypeDetail");
					this.OnaccountTypeDetailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblACHBankAccountTypes")]
	public partial class BankAccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _accountTypeId;
		
		private string _accountTypeDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaccountTypeIdChanging(string value);
    partial void OnaccountTypeIdChanged();
    partial void OnaccountTypeDetailChanging(string value);
    partial void OnaccountTypeDetailChanged();
    #endregion
		
		public BankAccountType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountTypeId", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string accountTypeId
		{
			get
			{
				return this._accountTypeId;
			}
			set
			{
				if ((this._accountTypeId != value))
				{
					this.OnaccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._accountTypeId = value;
					this.SendPropertyChanged("accountTypeId");
					this.OnaccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountTypeDetail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string accountTypeDetail
		{
			get
			{
				return this._accountTypeDetail;
			}
			set
			{
				if ((this._accountTypeDetail != value))
				{
					this.OnaccountTypeDetailChanging(value);
					this.SendPropertyChanging();
					this._accountTypeDetail = value;
					this.SendPropertyChanged("accountTypeDetail");
					this.OnaccountTypeDetailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
